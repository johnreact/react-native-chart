{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeSvg","_shape","_svg","_array","_math","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","AnimatedPath","Animated","createAnimatedComponent","Path","DonutChart","data","containerWidth","containerHeight","radius","startAngle","endAngle","strokeWidth","type","animationType","unit","typeLabel","labelWrapperStyle","labelValueStyle","labelTitleStyle","containerStyle","styleName","styleValue","icon","switchSvg","animatedRight","disableAnimation","valueShow","donutItemListeners","viewBox","ViewBox","width","height","squareInCircle","Square","diameter","animateOpacity","useRef","Value","current","animateContainerOpacity","animatedStrokeWidths","map","pathRefs","animatedPaths","displayValue","setDisplayValue","useState","rotationPaths","setRotationPath","defaultInterpolateConfig","inputRange","outputRange","sumOfDonutItemValue","useMemo","d","value","reduce","total","prev","donutItemValueToPercentage","rotationRange","length","forEach","_","idx","fromValues","sum","slice","toValues","start","LinearInterpolation","end","from","to","unshift","push","useEffect","setValue","slideAnimation","fadeAnimation","animationInProgress","stepAnimated","setStepAnimated","animations","timing","toValue","duration","easing","Easing","bezier","useNativeDriver","parallel","ani","startAnimation","index","setTimeout","element","addListener","animatedValue","startValue","removeAllListeners","_donutItemListeners$i","_donutItemListeners$i2","angle","arcParams","coordX","getCenterCoord","x","coordY","y","drawPath","Arc","getDrawPath","setNativeProps","onUpdateDisplayValue","onPressIn","onPressOut","_getContainerStyle","styles","defaultContainer","_getLabelValueStyle","color","defaultLabelValue","_getLabelTitleStyle","defaultLabelTitle","_getLabelWrapperStyle","defaultLabelWrapper","defaultLabelSemiCircular","getCorner","opacity","_getLabelWrapperIconStyle","defaultLabelIcon","Platform","OS","borderRadius","backgroundColor","renderSvg","createElement","Svg","key","ref","el","onPress","strokeLinecap","fill","stroke","Fragment","View","style","SvgXml","xml","Text","name","exports","StyleSheet","create","display","justifyContent","alignItems","position","paddingTop","Dimensions","fontSize","fontWeight"],"sources":["index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useMemo, useState, Fragment } from \"react\";\nimport {\n  StyleProp,\n  Text,\n  View,\n  ViewStyle,\n  Animated,\n  StyleSheet,\n  TextStyle,\n  Easing,\n  Dimensions,\n  Platform,\n} from \"react-native\";\n\nimport { Svg, Path, SvgXml } from \"react-native-svg\";\nimport { Square } from \"./packages/shape\";\nimport { Arc, ArcParams, ViewBox } from \"./packages/svg\";\nimport { sum } from \"./packages/array\";\nimport { LinearInterpolation } from \"./packages/math\";\n\nexport type DonutItem = {\n  name: string;\n  value: number;\n  color: string;\n};\n\nexport type DonutAnimationType = \"fade\" | \"slide\";\n\nexport type DonutAnimationTypeLabel = 'circular' | 'semi-circular';\n\nexport type IDonutProps = {\n  data: DonutItem[];\n  containerWidth: number;\n  containerHeight: number;\n  radius: number;\n  startAngle?: number;\n  endAngle?: number;\n  strokeWidth?: number;\n  type?: \"butt\" | \"round\" | \"square\";\n  typeLabel?: any;\n  labelValueStyle?: StyleProp<TextStyle>;\n  labelTitleStyle?: StyleProp<TextStyle>;\n  labelWrapperStyle?: StyleProp<ViewStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n  animationType?: DonutAnimationType;\n  unit?: string;\n  styleName?: TextStyle,\n  styleValue?: TextStyle\n  icon?: string\n  switchSvg?: boolean\n  animatedRight?: boolean\n  disableAnimation?: boolean,\n  valueShow?: any\n};\n\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nexport const DonutChart = ({\n  data,\n  containerWidth,\n  containerHeight,\n  radius,\n  startAngle = -125,\n  endAngle = startAngle * -1,\n  strokeWidth = 10,\n  type = \"round\",\n  animationType = \"slide\",\n  unit,\n  typeLabel = \"circular\",\n  labelWrapperStyle,\n  labelValueStyle,\n  labelTitleStyle,\n  containerStyle,\n  styleName,\n  styleValue,\n  icon = '',\n  switchSvg = false,\n  animatedRight,\n  disableAnimation = true,\n  valueShow\n}: IDonutProps) => {\n  let donutItemListeners: any = [];\n  const viewBox = new ViewBox({\n    width: containerWidth,\n    height: containerHeight,\n  });\n  const squareInCircle = new Square({ diameter: radius * 2 });\n\n  const animateOpacity = useRef(new Animated.Value(0)).current;\n  const animateContainerOpacity = useRef(new Animated.Value(0)).current;\n  const animatedStrokeWidths = useRef(\n    data.map(() => new Animated.Value(strokeWidth))\n  ).current;\n  const pathRefs = useRef<typeof AnimatedPath[]>([]);\n  const animatedPaths = useRef<Array<Animated.Value>>([]).current;\n\n\n  \n\n  const [displayValue, setDisplayValue] = useState<DonutItem>(switchSvg ? data[1] : data[0]);\n\n  // TODO:\n  // remove WTF is this variable ?\n  const [rotationPaths, setRotationPath] = useState<\n    Array<{ from: number; to: number }>\n  >([]);\n\n  const defaultInterpolateConfig = (): {\n    inputRange: [number, number];\n    outputRange: [number, number];\n  } => ({ inputRange: [0, 100], outputRange: [startAngle, endAngle] });\n\n  const sumOfDonutItemValue = useMemo(\n    (): number =>\n      data\n        .map((d) => d.value)\n        .reduce((total: number, prev: number) => total + prev),\n    [data]\n  );\n\n  const donutItemValueToPercentage = useMemo(\n    () => data.map((d) => (d.value / sumOfDonutItemValue) * 100),\n    [sumOfDonutItemValue, data]\n  );\n\n  useMemo(() => {\n    const rotationRange: Array<{ from: number; to: number }> = [];\n\n    if (switchSvg) {\n      animatedPaths.length = 0;\n  \n      data.forEach((_, idx) => {\n        const fromValues = sum(donutItemValueToPercentage.slice(0, idx));\n        const toValues = sum(donutItemValueToPercentage.slice(0, idx + 1))\n    \n        const start = LinearInterpolation({\n          value: fromValues,\n          ...defaultInterpolateConfig(),\n        });\n    \n        const end = LinearInterpolation({\n          value: toValues,\n          ...defaultInterpolateConfig(),\n        });\n    \n        rotationRange[idx] = { from: start, to: end };\n    \n        animatedPaths.unshift(new Animated.Value(start));\n      });\n      setRotationPath(rotationRange);\n    } else {\n    data.forEach((_, idx) => {\n      const fromValues = sum(donutItemValueToPercentage.slice(0, idx));\n      const toValues = sum(donutItemValueToPercentage.slice(0, idx + 1));\n\n      animatedPaths.push(\n        new Animated.Value(\n          LinearInterpolation({\n            value: fromValues,\n            ...defaultInterpolateConfig(),\n          })\n        )\n      );\n\n      rotationRange[idx] = {\n        from: LinearInterpolation({\n          value: fromValues,\n          ...defaultInterpolateConfig(),\n        }),\n        to: LinearInterpolation({\n          value: toValues,\n          ...defaultInterpolateConfig(),\n        }),\n      };\n    });\n    setRotationPath(rotationRange);\n    }\n\n   \n  }, [data]);\n\n  useEffect(() => {\n    if (disableAnimation === true) {\n      // Không chạy animation, hiển thị ngay trạng thái cuối cùng\n      rotationPaths.forEach((d, i) => {\n        animatedPaths[i].setValue(d.to); // Đặt giá trị trực tiếp mà không cần animate\n      });\n    } else {\n      switch (animationType) {\n        case \"slide\":\n          animateContainerOpacity.setValue(1);\n          slideAnimation();\n          break;\n\n        default:\n          fadeAnimation();\n          break;\n      }\n    }\n  }, [disableAnimation, data]);\n\n  useEffect(() => {\n    switch (animationType) {\n      case \"slide\":\n        animateContainerOpacity.setValue(1);\n        slideAnimation();\n        break;\n\n      default:\n        fadeAnimation();\n        break;\n    }\n  }, []);\n\n  let animationInProgress = false;\n\n  const [stepAnimated, setStepAnimated] = useState(1)\n\n  const slideAnimation = () => {\n    if (disableAnimation || animationInProgress) return;\n    if (switchSvg) {\n      const animations: Animated.CompositeAnimation[] = rotationPaths.map((d, i) => {\n        return Animated.timing(animatedPaths[i], {\n          toValue: d.to,\n          duration: 3000,\n          easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n          useNativeDriver: true,\n        });\n      });\n    \n      Animated.parallel(animations).start();\n    } else {\n        const animations: Animated.CompositeAnimation[] = data.map((_, i) => {\n      const ani = Animated.timing(animatedPaths[i], {\n        toValue: rotationPaths[i].to,\n        duration: 3000,\n        easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n        useNativeDriver: true,\n      });\n\n      return ani;\n    });\n    Animated.parallel(animations).start();\n    }\n\n    animationInProgress = true;\n\n    const startAnimation = (index: number) => {\n\n    if (index >= animatedPaths.length || index > stepAnimated) {\n      animationInProgress = false; // Reset when all animations are done\n      return;\n    }\n\n    setTimeout(() => {\n      setStepAnimated(index);\n    }, 25);\n\n\n      Animated.timing(animatedPaths[index], {\n        toValue: rotationPaths[index].to,\n        duration: 2000,\n        easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n        useNativeDriver: true,\n      }).start(() => {\n        startAnimation(index + 1);\n       \n      });\n  };\n    startAnimation(0);\n    setStepAnimated(0)\n  };\n\n  const fadeAnimation = () => {\n    Animated.timing(animateContainerOpacity, {\n      toValue: 1,\n      duration: 2500,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    data.forEach((_, i) => {\n      const element = pathRefs.current[animatedRight ? 1 : i];\n      donutItemListeners[i] = addListener({\n        element,\n        animatedValue: animatedPaths[animatedRight ? 1 : i],\n        startValue: rotationPaths[animatedRight ? 1 : i].from,\n      });\n    });\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      if (animationType === \"slide\") {\n        data.forEach((_, i) => {\n          if (\n            donutItemListeners?.[i] &&\n            donutItemListeners?.[i].removeAllListeners\n          ) {\n            donutItemListeners?.[i].removeAllListeners?.();\n          }\n        });\n      }\n    };\n  }, []);\n\n  const addListener = ({\n    element,\n    animatedValue,\n    startValue,\n  }: {\n    element: any;\n    animatedValue: Animated.Value;\n    startValue: number;\n  }) => {\n    animatedValue.addListener((angle) => {\n      const arcParams: ArcParams = {\n        coordX: viewBox.getCenterCoord().x,\n        coordY: viewBox.getCenterCoord().y,\n        radius: radius,\n        startAngle: startValue,\n        endAngle: angle.value,\n      };\n      const drawPath = new Arc(arcParams).getDrawPath();\n\n      if (element) {\n        element.setNativeProps({ d: drawPath });\n      }\n    });\n  };\n\n  useEffect(() => {\n    animateOpacity.setValue(0);\n    Animated.timing(animateOpacity, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const onUpdateDisplayValue = (value: DonutItem, index: number) => {\n    setDisplayValue(value);\n    animateOpacity.setValue(0);\n\n    Animated.parallel([\n      Animated.timing(animateOpacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true,\n      }),\n    ]).start();\n  };\n\n  const onPressIn = (value: DonutItem, index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth + 2,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const onPressOut = (index: number) => {\n    Animated.timing(animatedStrokeWidths[index], {\n      toValue: strokeWidth,\n      duration: 500,\n      useNativeDriver: true,\n      easing: Easing.bezier(0.075, 0.82, 0.165, 1),\n    }).start();\n  };\n\n  const _getContainerStyle = (): StyleProp<ViewStyle> => [\n    styles.defaultContainer,\n    containerStyle,\n    { width: containerWidth, height: containerHeight },\n  ];\n\n  const _getLabelValueStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelValue,\n    { color },\n    labelValueStyle,\n  ];\n\n  const _getLabelTitleStyle = (color: string): StyleProp<TextStyle> => [\n    styles.defaultLabelTitle,\n    { color },\n    labelTitleStyle,\n  ];\n\n  const _getLabelWrapperStyle = (): Animated.WithAnimatedArray<any> => [\n    typeLabel === 'circular' ? styles.defaultLabelWrapper : styles.defaultLabelSemiCircular , \n    {\n      width: squareInCircle.getCorner() - strokeWidth,\n      height: squareInCircle.getCorner() - strokeWidth,\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  const _getLabelWrapperIconStyle = (): Animated.WithAnimatedArray<any> => [\n styles.defaultLabelIcon , \n    {\n      width:  radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      height: radius * (Platform.OS ==='android' ? 1.5 : 1.55),\n      borderRadius: 120,\n      backgroundColor: '#F4F8FC',\n      opacity: animateOpacity,\n    },\n    labelWrapperStyle,\n  ];\n\n  const renderSvg = useMemo(() => {\n    return (\n      <Svg width={viewBox.width} height={viewBox.height}>\n        {rotationPaths.map((d, i) => {\n          const arcParams: ArcParams = {\n            coordX: viewBox.getCenterCoord().x,\n            coordY: viewBox.getCenterCoord().y,\n            radius: radius,\n            startAngle: d.from,\n            endAngle: d.to,\n          };\n          const drawPath = new Arc(arcParams).getDrawPath();\n\n          return (\n            <AnimatedPath\n              key={`item-${i}`}\n              ref={(el: any) => (pathRefs.current[i] = el)}\n              onPress={() => onUpdateDisplayValue(data[i], i)}\n              onPressIn={() => onPressIn(data[i], i)}\n              onPressOut={() => onPressOut(i)}\n              strokeLinecap={type}\n              d={drawPath}\n              opacity={animateContainerOpacity}\n              fill=\"none\"\n              stroke={ stepAnimated < i && !disableAnimation ?  'white' : data[i].color}\n              strokeWidth={animatedStrokeWidths[i]}\n            />\n          );\n        })}\n      </Svg>\n    )\n  }, [rotationPaths, viewBox, stepAnimated, pathRefs.current, animateContainerOpacity, animatedStrokeWidths])\n  \n\n  return (\n    <Fragment>\n      <View style={_getContainerStyle()}>\n      {renderSvg}\n        {\n          icon !== '' ? \n          <Animated.View style={_getLabelWrapperIconStyle()}>\n          <SvgXml xml={icon} />\n          </Animated.View>\n          :\n        <Animated.View style={_getLabelWrapperStyle()}>\n          <Text style={[_getLabelTitleStyle(displayValue?.color), {...styleName}]}>\n            {displayValue?.name}\n          </Text>\n          <Text style={[_getLabelValueStyle(displayValue?.color), {...styleValue}]}>\n            {valueShow.value} {unit}\n          </Text>\n        </Animated.View>\n        }\n      </View>\n    </Fragment>\n  );\n};\nconst styles = StyleSheet.create({\n  defaultContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelWrapper: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  defaultLabelSemiCircular: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: 'flex-start',\n    paddingTop: Dimensions.get('window').width * 0.06\n  },\n\n  defaultLabelIcon: {\n    position: \"absolute\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n  },\n\n  defaultLabelValue: {\n    fontSize: 32,\n    fontWeight: \"bold\",\n  },\n\n  defaultLabelTitle: {\n    fontSize: 16,\n  },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAaA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AACA,IAAAI,IAAA,GAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,KAAA,GAAAN,OAAA;AAAsD,SAAAD,wBAAAQ,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAV,uBAAA,YAAAA,CAAAQ,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,gBAAAP,CAAA,IAAAD,CAAA,gBAAAC,CAAA,OAAAa,cAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAC,CAAA,OAAAM,CAAA,IAAAD,CAAA,GAAAU,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAlB,CAAA,EAAAC,CAAA,OAAAM,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAP,CAAA,EAAAM,CAAA,IAAAC,CAAA,CAAAP,CAAA,IAAAD,CAAA,CAAAC,CAAA,WAAAO,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAqCtD,MAAMkB,YAAY,GAAGC,qBAAQ,CAACC,uBAAuB,CAACC,oBAAI,CAAC;AAEpD,MAAMC,UAAU,GAAGA,CAAC;EACzBC,IAAI;EACJC,cAAc;EACdC,eAAe;EACfC,MAAM;EACNC,UAAU,GAAG,CAAC,GAAG;EACjBC,QAAQ,GAAGD,UAAU,GAAG,CAAC,CAAC;EAC1BE,WAAW,GAAG,EAAE;EAChBC,IAAI,GAAG,OAAO;EACdC,aAAa,GAAG,OAAO;EACvBC,IAAI;EACJC,SAAS,GAAG,UAAU;EACtBC,iBAAiB;EACjBC,eAAe;EACfC,eAAe;EACfC,cAAc;EACdC,SAAS;EACTC,UAAU;EACVC,IAAI,GAAG,EAAE;EACTC,SAAS,GAAG,KAAK;EACjBC,aAAa;EACbC,gBAAgB,GAAG,IAAI;EACvBC;AACW,CAAC,KAAK;EACjB,IAAIC,kBAAuB,GAAG,EAAE;EAChC,MAAMC,OAAO,GAAG,IAAIC,YAAO,CAAC;IAC1BC,KAAK,EAAExB,cAAc;IACrByB,MAAM,EAAExB;EACV,CAAC,CAAC;EACF,MAAMyB,cAAc,GAAG,IAAIC,aAAM,CAAC;IAAEC,QAAQ,EAAE1B,MAAM,GAAG;EAAE,CAAC,CAAC;EAE3D,MAAM2B,cAAc,GAAG,IAAAC,aAAM,EAAC,IAAInC,qBAAQ,CAACoC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAC5D,MAAMC,uBAAuB,GAAG,IAAAH,aAAM,EAAC,IAAInC,qBAAQ,CAACoC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EACrE,MAAME,oBAAoB,GAAG,IAAAJ,aAAM,EACjC/B,IAAI,CAACoC,GAAG,CAAC,MAAM,IAAIxC,qBAAQ,CAACoC,KAAK,CAAC1B,WAAW,CAAC,CAChD,CAAC,CAAC2B,OAAO;EACT,MAAMI,QAAQ,GAAG,IAAAN,aAAM,EAAwB,EAAE,CAAC;EAClD,MAAMO,aAAa,GAAG,IAAAP,aAAM,EAAwB,EAAE,CAAC,CAACE,OAAO;EAK/D,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAAC,eAAQ,EAAYvB,SAAS,GAAGlB,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE1F;EACA;EACA,MAAM,CAAC0C,aAAa,EAAEC,eAAe,CAAC,GAAG,IAAAF,eAAQ,EAE/C,EAAE,CAAC;EAEL,MAAMG,wBAAwB,GAAGA,CAAA,MAG3B;IAAEC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IAAEC,WAAW,EAAE,CAAC1C,UAAU,EAAEC,QAAQ;EAAE,CAAC,CAAC;EAEpE,MAAM0C,mBAAmB,GAAG,IAAAC,cAAO,EACjC,MACEhD,IAAI,CACDoC,GAAG,CAAEa,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CACnBC,MAAM,CAAC,CAACC,KAAa,EAAEC,IAAY,KAAKD,KAAK,GAAGC,IAAI,CAAC,EAC1D,CAACrD,IAAI,CACP,CAAC;EAED,MAAMsD,0BAA0B,GAAG,IAAAN,cAAO,EACxC,MAAMhD,IAAI,CAACoC,GAAG,CAAEa,CAAC,IAAMA,CAAC,CAACC,KAAK,GAAGH,mBAAmB,GAAI,GAAG,CAAC,EAC5D,CAACA,mBAAmB,EAAE/C,IAAI,CAC5B,CAAC;EAED,IAAAgD,cAAO,EAAC,MAAM;IACZ,MAAMO,aAAkD,GAAG,EAAE;IAE7D,IAAIrC,SAAS,EAAE;MACboB,aAAa,CAACkB,MAAM,GAAG,CAAC;MAExBxD,IAAI,CAACyD,OAAO,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;QACvB,MAAMC,UAAU,GAAG,IAAAC,UAAG,EAACP,0BAA0B,CAACQ,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC;QAChE,MAAMI,QAAQ,GAAG,IAAAF,UAAG,EAACP,0BAA0B,CAACQ,KAAK,CAAC,CAAC,EAAEH,GAAG,GAAG,CAAC,CAAC,CAAC;QAElE,MAAMK,KAAK,GAAG,IAAAC,yBAAmB,EAAC;UAChCf,KAAK,EAAEU,UAAU;UACjB,GAAGhB,wBAAwB,CAAC;QAC9B,CAAC,CAAC;QAEF,MAAMsB,GAAG,GAAG,IAAAD,yBAAmB,EAAC;UAC9Bf,KAAK,EAAEa,QAAQ;UACf,GAAGnB,wBAAwB,CAAC;QAC9B,CAAC,CAAC;QAEFW,aAAa,CAACI,GAAG,CAAC,GAAG;UAAEQ,IAAI,EAAEH,KAAK;UAAEI,EAAE,EAAEF;QAAI,CAAC;QAE7C5B,aAAa,CAAC+B,OAAO,CAAC,IAAIzE,qBAAQ,CAACoC,KAAK,CAACgC,KAAK,CAAC,CAAC;MAClD,CAAC,CAAC;MACFrB,eAAe,CAACY,aAAa,CAAC;IAChC,CAAC,MAAM;MACPvD,IAAI,CAACyD,OAAO,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;QACvB,MAAMC,UAAU,GAAG,IAAAC,UAAG,EAACP,0BAA0B,CAACQ,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CAAC;QAChE,MAAMI,QAAQ,GAAG,IAAAF,UAAG,EAACP,0BAA0B,CAACQ,KAAK,CAAC,CAAC,EAAEH,GAAG,GAAG,CAAC,CAAC,CAAC;QAElErB,aAAa,CAACgC,IAAI,CAChB,IAAI1E,qBAAQ,CAACoC,KAAK,CAChB,IAAAiC,yBAAmB,EAAC;UAClBf,KAAK,EAAEU,UAAU;UACjB,GAAGhB,wBAAwB,CAAC;QAC9B,CAAC,CACH,CACF,CAAC;QAEDW,aAAa,CAACI,GAAG,CAAC,GAAG;UACnBQ,IAAI,EAAE,IAAAF,yBAAmB,EAAC;YACxBf,KAAK,EAAEU,UAAU;YACjB,GAAGhB,wBAAwB,CAAC;UAC9B,CAAC,CAAC;UACFwB,EAAE,EAAE,IAAAH,yBAAmB,EAAC;YACtBf,KAAK,EAAEa,QAAQ;YACf,GAAGnB,wBAAwB,CAAC;UAC9B,CAAC;QACH,CAAC;MACH,CAAC,CAAC;MACFD,eAAe,CAACY,aAAa,CAAC;IAC9B;EAGF,CAAC,EAAE,CAACvD,IAAI,CAAC,CAAC;EAEV,IAAAuE,gBAAS,EAAC,MAAM;IACd,IAAInD,gBAAgB,KAAK,IAAI,EAAE;MAC7B;MACAsB,aAAa,CAACe,OAAO,CAAC,CAACR,CAAC,EAAElE,CAAC,KAAK;QAC9BuD,aAAa,CAACvD,CAAC,CAAC,CAACyF,QAAQ,CAACvB,CAAC,CAACmB,EAAE,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,QAAQ5D,aAAa;QACnB,KAAK,OAAO;UACV0B,uBAAuB,CAACsC,QAAQ,CAAC,CAAC,CAAC;UACnCC,cAAc,CAAC,CAAC;UAChB;QAEF;UACEC,aAAa,CAAC,CAAC;UACf;MACJ;IACF;EACF,CAAC,EAAE,CAACtD,gBAAgB,EAAEpB,IAAI,CAAC,CAAC;EAE5B,IAAAuE,gBAAS,EAAC,MAAM;IACd,QAAQ/D,aAAa;MACnB,KAAK,OAAO;QACV0B,uBAAuB,CAACsC,QAAQ,CAAC,CAAC,CAAC;QACnCC,cAAc,CAAC,CAAC;QAChB;MAEF;QACEC,aAAa,CAAC,CAAC;QACf;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,mBAAmB,GAAG,KAAK;EAE/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG,IAAApC,eAAQ,EAAC,CAAC,CAAC;EAEnD,MAAMgC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIrD,gBAAgB,IAAIuD,mBAAmB,EAAE;IAC7C,IAAIzD,SAAS,EAAE;MACb,MAAM4D,UAAyC,GAAGpC,aAAa,CAACN,GAAG,CAAC,CAACa,CAAC,EAAElE,CAAC,KAAK;QAC5E,OAAOa,qBAAQ,CAACmF,MAAM,CAACzC,aAAa,CAACvD,CAAC,CAAC,EAAE;UACvCiG,OAAO,EAAE/B,CAAC,CAACmB,EAAE;UACba,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;UAC5CC,eAAe,EAAE;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFzF,qBAAQ,CAAC0F,QAAQ,CAACR,UAAU,CAAC,CAACd,KAAK,CAAC,CAAC;IACvC,CAAC,MAAM;MACH,MAAMc,UAAyC,GAAG9E,IAAI,CAACoC,GAAG,CAAC,CAACsB,CAAC,EAAE3E,CAAC,KAAK;QACvE,MAAMwG,GAAG,GAAG3F,qBAAQ,CAACmF,MAAM,CAACzC,aAAa,CAACvD,CAAC,CAAC,EAAE;UAC5CiG,OAAO,EAAEtC,aAAa,CAAC3D,CAAC,CAAC,CAACqF,EAAE;UAC5Ba,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;UAC5CC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,OAAOE,GAAG;MACZ,CAAC,CAAC;MACF3F,qBAAQ,CAAC0F,QAAQ,CAACR,UAAU,CAAC,CAACd,KAAK,CAAC,CAAC;IACrC;IAEAW,mBAAmB,GAAG,IAAI;IAE1B,MAAMa,cAAc,GAAIC,KAAa,IAAK;MAE1C,IAAIA,KAAK,IAAInD,aAAa,CAACkB,MAAM,IAAIiC,KAAK,GAAGb,YAAY,EAAE;QACzDD,mBAAmB,GAAG,KAAK,CAAC,CAAC;QAC7B;MACF;MAEAe,UAAU,CAAC,MAAM;QACfb,eAAe,CAACY,KAAK,CAAC;MACxB,CAAC,EAAE,EAAE,CAAC;MAGJ7F,qBAAQ,CAACmF,MAAM,CAACzC,aAAa,CAACmD,KAAK,CAAC,EAAE;QACpCT,OAAO,EAAEtC,aAAa,CAAC+C,KAAK,CAAC,CAACrB,EAAE;QAChCa,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5CC,eAAe,EAAE;MACnB,CAAC,CAAC,CAACrB,KAAK,CAAC,MAAM;QACbwB,cAAc,CAACC,KAAK,GAAG,CAAC,CAAC;MAE3B,CAAC,CAAC;IACN,CAAC;IACCD,cAAc,CAAC,CAAC,CAAC;IACjBX,eAAe,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,MAAMH,aAAa,GAAGA,CAAA,KAAM;IAC1B9E,qBAAQ,CAACmF,MAAM,CAAC7C,uBAAuB,EAAE;MACvC8C,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;MAC5CC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACrB,KAAK,CAAC,CAAC;EACZ,CAAC;EAED,IAAAO,gBAAS,EAAC,MAAM;IACdvE,IAAI,CAACyD,OAAO,CAAC,CAACC,CAAC,EAAE3E,CAAC,KAAK;MACrB,MAAM4G,OAAO,GAAGtD,QAAQ,CAACJ,OAAO,CAACd,aAAa,GAAG,CAAC,GAAGpC,CAAC,CAAC;MACvDuC,kBAAkB,CAACvC,CAAC,CAAC,GAAG6G,WAAW,CAAC;QAClCD,OAAO;QACPE,aAAa,EAAEvD,aAAa,CAACnB,aAAa,GAAG,CAAC,GAAGpC,CAAC,CAAC;QACnD+G,UAAU,EAAEpD,aAAa,CAACvB,aAAa,GAAG,CAAC,GAAGpC,CAAC,CAAC,CAACoF;MACnD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAAI,gBAAS,EAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI/D,aAAa,KAAK,OAAO,EAAE;QAC7BR,IAAI,CAACyD,OAAO,CAAC,CAACC,CAAC,EAAE3E,CAAC,KAAK;UACrB,IACEuC,kBAAkB,aAAlBA,kBAAkB,eAAlBA,kBAAkB,CAAGvC,CAAC,CAAC,IACvBuC,kBAAkB,aAAlBA,kBAAkB,eAAlBA,kBAAkB,CAAGvC,CAAC,CAAC,CAACgH,kBAAkB,EAC1C;YAAA,IAAAC,qBAAA,EAAAC,sBAAA;YACA3E,kBAAkB,aAAlBA,kBAAkB,gBAAA0E,qBAAA,GAAlB,CAAAC,sBAAA,GAAA3E,kBAAkB,CAAGvC,CAAC,CAAC,EAACgH,kBAAkB,cAAAC,qBAAA,eAA1CA,qBAAA,CAAAzG,IAAA,CAAA0G,sBAA6C,CAAC;UAChD;QACF,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAML,WAAW,GAAGA,CAAC;IACnBD,OAAO;IACPE,aAAa;IACbC;EAKF,CAAC,KAAK;IACJD,aAAa,CAACD,WAAW,CAAEM,KAAK,IAAK;MACnC,MAAMC,SAAoB,GAAG;QAC3BC,MAAM,EAAE7E,OAAO,CAAC8E,cAAc,CAAC,CAAC,CAACC,CAAC;QAClCC,MAAM,EAAEhF,OAAO,CAAC8E,cAAc,CAAC,CAAC,CAACG,CAAC;QAClCrG,MAAM,EAAEA,MAAM;QACdC,UAAU,EAAE0F,UAAU;QACtBzF,QAAQ,EAAE6F,KAAK,CAAChD;MAClB,CAAC;MACD,MAAMuD,QAAQ,GAAG,IAAIC,QAAG,CAACP,SAAS,CAAC,CAACQ,WAAW,CAAC,CAAC;MAEjD,IAAIhB,OAAO,EAAE;QACXA,OAAO,CAACiB,cAAc,CAAC;UAAE3D,CAAC,EAAEwD;QAAS,CAAC,CAAC;MACzC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,IAAAlC,gBAAS,EAAC,MAAM;IACdzC,cAAc,CAAC0C,QAAQ,CAAC,CAAC,CAAC;IAC1B5E,qBAAQ,CAACmF,MAAM,CAACjD,cAAc,EAAE;MAC9BkD,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbC,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;MAC5CC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACrB,KAAK,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6C,oBAAoB,GAAGA,CAAC3D,KAAgB,EAAEuC,KAAa,KAAK;IAChEjD,eAAe,CAACU,KAAK,CAAC;IACtBpB,cAAc,CAAC0C,QAAQ,CAAC,CAAC,CAAC;IAE1B5E,qBAAQ,CAAC0F,QAAQ,CAAC,CAChB1F,qBAAQ,CAACmF,MAAM,CAACjD,cAAc,EAAE;MAC9BkD,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG;MACbI,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAAC,CAACrB,KAAK,CAAC,CAAC;EACZ,CAAC;EAED,MAAM8C,SAAS,GAAGA,CAAC5D,KAAgB,EAAEuC,KAAa,KAAK;IACrD7F,qBAAQ,CAACmF,MAAM,CAAC5C,oBAAoB,CAACsD,KAAK,CAAC,EAAE;MAC3CT,OAAO,EAAE1E,WAAW,GAAG,CAAC;MACxB2E,QAAQ,EAAE,GAAG;MACbI,eAAe,EAAE,IAAI;MACrBH,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAC7C,CAAC,CAAC,CAACpB,KAAK,CAAC,CAAC;EACZ,CAAC;EAED,MAAM+C,UAAU,GAAItB,KAAa,IAAK;IACpC7F,qBAAQ,CAACmF,MAAM,CAAC5C,oBAAoB,CAACsD,KAAK,CAAC,EAAE;MAC3CT,OAAO,EAAE1E,WAAW;MACpB2E,QAAQ,EAAE,GAAG;MACbI,eAAe,EAAE,IAAI;MACrBH,MAAM,EAAEC,mBAAM,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAC7C,CAAC,CAAC,CAACpB,KAAK,CAAC,CAAC;EACZ,CAAC;EAED,MAAMgD,kBAAkB,GAAGA,CAAA,KAA4B,CACrDC,MAAM,CAACC,gBAAgB,EACvBpG,cAAc,EACd;IAAEW,KAAK,EAAExB,cAAc;IAAEyB,MAAM,EAAExB;EAAgB,CAAC,CACnD;EAED,MAAMiH,mBAAmB,GAAIC,KAAa,IAA2B,CACnEH,MAAM,CAACI,iBAAiB,EACxB;IAAED;EAAM,CAAC,EACTxG,eAAe,CAChB;EAED,MAAM0G,mBAAmB,GAAIF,KAAa,IAA2B,CACnEH,MAAM,CAACM,iBAAiB,EACxB;IAAEH;EAAM,CAAC,EACTvG,eAAe,CAChB;EAED,MAAM2G,qBAAqB,GAAGA,CAAA,KAAuC,CACnE9G,SAAS,KAAK,UAAU,GAAGuG,MAAM,CAACQ,mBAAmB,GAAGR,MAAM,CAACS,wBAAwB,EACvF;IACEjG,KAAK,EAAEE,cAAc,CAACgG,SAAS,CAAC,CAAC,GAAGrH,WAAW;IAC/CoB,MAAM,EAAEC,cAAc,CAACgG,SAAS,CAAC,CAAC,GAAGrH,WAAW;IAChDsH,OAAO,EAAE9F;EACX,CAAC,EACDnB,iBAAiB,CAClB;EAED,MAAMkH,yBAAyB,GAAGA,CAAA,KAAuC,CAC1EZ,MAAM,CAACa,gBAAgB,EACpB;IACErG,KAAK,EAAGtB,MAAM,IAAI4H,qBAAQ,CAACC,EAAE,KAAI,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;IACxDtG,MAAM,EAAEvB,MAAM,IAAI4H,qBAAQ,CAACC,EAAE,KAAI,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;IACxDC,YAAY,EAAE,GAAG;IACjBC,eAAe,EAAE,SAAS;IAC1BN,OAAO,EAAE9F;EACX,CAAC,EACDnB,iBAAiB,CAClB;EAED,MAAMwH,SAAS,GAAG,IAAAnF,cAAO,EAAC,MAAM;IAC9B,oBACEjF,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAACjK,eAAA,CAAAkK,GAAG;MAAC5G,KAAK,EAAEF,OAAO,CAACE,KAAM;MAACC,MAAM,EAAEH,OAAO,CAACG;IAAO,GAC/CgB,aAAa,CAACN,GAAG,CAAC,CAACa,CAAC,EAAElE,CAAC,KAAK;MAC3B,MAAMoH,SAAoB,GAAG;QAC3BC,MAAM,EAAE7E,OAAO,CAAC8E,cAAc,CAAC,CAAC,CAACC,CAAC;QAClCC,MAAM,EAAEhF,OAAO,CAAC8E,cAAc,CAAC,CAAC,CAACG,CAAC;QAClCrG,MAAM,EAAEA,MAAM;QACdC,UAAU,EAAE6C,CAAC,CAACkB,IAAI;QAClB9D,QAAQ,EAAE4C,CAAC,CAACmB;MACd,CAAC;MACD,MAAMqC,QAAQ,GAAG,IAAIC,QAAG,CAACP,SAAS,CAAC,CAACQ,WAAW,CAAC,CAAC;MAEjD,oBACE5I,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAACzI,YAAY;QACX2I,GAAG,EAAE,QAAQvJ,CAAC,EAAG;QACjBwJ,GAAG,EAAGC,EAAO,IAAMnG,QAAQ,CAACJ,OAAO,CAAClD,CAAC,CAAC,GAAGyJ,EAAI;QAC7CC,OAAO,EAAEA,CAAA,KAAM5B,oBAAoB,CAAC7G,IAAI,CAACjB,CAAC,CAAC,EAAEA,CAAC,CAAE;QAChD+H,SAAS,EAAEA,CAAA,KAAMA,SAAS,CAAC9G,IAAI,CAACjB,CAAC,CAAC,EAAEA,CAAC,CAAE;QACvCgI,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAAChI,CAAC,CAAE;QAChC2J,aAAa,EAAEnI,IAAK;QACpB0C,CAAC,EAAEwD,QAAS;QACZmB,OAAO,EAAE1F,uBAAwB;QACjCyG,IAAI,EAAC,MAAM;QACXC,MAAM,EAAGhE,YAAY,GAAG7F,CAAC,IAAI,CAACqC,gBAAgB,GAAI,OAAO,GAAGpB,IAAI,CAACjB,CAAC,CAAC,CAACqI,KAAM;QAC1E9G,WAAW,EAAE6B,oBAAoB,CAACpD,CAAC;MAAE,CACtC,CAAC;IAEN,CAAC,CACE,CAAC;EAEV,CAAC,EAAE,CAAC2D,aAAa,EAAEnB,OAAO,EAAEqD,YAAY,EAAEvC,QAAQ,CAACJ,OAAO,EAAEC,uBAAuB,EAAEC,oBAAoB,CAAC,CAAC;EAG3G,oBACEpE,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAACrK,MAAA,CAAA8K,QAAQ,qBACP9K,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAAClK,YAAA,CAAA4K,IAAI;IAACC,KAAK,EAAE/B,kBAAkB,CAAC;EAAE,GACjCmB,SAAS,EAENlH,IAAI,KAAK,EAAE,gBACXlD,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAAClK,YAAA,CAAA0B,QAAQ,CAACkJ,IAAI;IAACC,KAAK,EAAElB,yBAAyB,CAAC;EAAE,gBAClD9J,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAACjK,eAAA,CAAA6K,MAAM;IAACC,GAAG,EAAEhI;EAAK,CAAE,CACL,CAAC,gBAElBlD,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAAClK,YAAA,CAAA0B,QAAQ,CAACkJ,IAAI;IAACC,KAAK,EAAEvB,qBAAqB,CAAC;EAAE,gBAC5CzJ,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAAClK,YAAA,CAAAgL,IAAI;IAACH,KAAK,EAAE,CAACzB,mBAAmB,CAAC/E,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6E,KAAK,CAAC,EAAE;MAAC,GAAGrG;IAAS,CAAC;EAAE,GACrEwB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4G,IACX,CAAC,eACPpL,MAAA,CAAAmB,OAAA,CAAAkJ,aAAA,CAAClK,YAAA,CAAAgL,IAAI;IAACH,KAAK,EAAE,CAAC5B,mBAAmB,CAAC5E,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6E,KAAK,CAAC,EAAE;MAAC,GAAGpG;IAAU,CAAC;EAAE,GACtEK,SAAS,CAAC6B,KAAK,EAAC,GAAC,EAACzC,IACf,CACO,CAEX,CACE,CAAC;AAEf,CAAC;AAAC2I,OAAA,CAAArJ,UAAA,GAAAA,UAAA;AACF,MAAMkH,MAAM,GAAGoC,uBAAU,CAACC,MAAM,CAAC;EAC/BpC,gBAAgB,EAAE;IAChBqC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EAEDhC,mBAAmB,EAAE;IACnBiC,QAAQ,EAAE,UAAU;IACpBF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EAED/B,wBAAwB,EAAE;IACxBgC,QAAQ,EAAE,UAAU;IACpBD,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE,YAAY;IAC5BG,UAAU,EAAEC,uBAAU,CAACxK,GAAG,CAAC,QAAQ,CAAC,CAACqC,KAAK,GAAG;EAC/C,CAAC;EAEDqG,gBAAgB,EAAE;IAChB4B,QAAQ,EAAE,UAAU;IACpBF,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAEd,CAAC;EAEDpC,iBAAiB,EAAE;IACjBwC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EAEDvC,iBAAiB,EAAE;IACjBsC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]}